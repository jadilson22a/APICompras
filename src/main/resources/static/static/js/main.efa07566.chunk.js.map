{"version":3,"sources":["CotacaoForm.js","App.js","reportWebVitals.js","index.js"],"names":["CotacaoForm","produtos","setProdutos","useState","nome","quantidade","status","setStatus","handleChange","index","field","value","novosProdutos","React","createElement","className","onSubmit","e","preventDefault","cotacao","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","ok","Error","alert","catch","err","message","onChange","target","map","p","key","type","placeholder","required","min","onClick","filter","_","i","removerProduto","adicionarProduto","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yIAoFeA,MAjFf,WACE,MAAOC,EAAUC,GAAeC,mBAAS,CAAC,CAAEC,KAAM,GAAIC,WAAY,MAC3DC,EAAQC,GAAaJ,mBAAS,UAE/BK,EAAeA,CAACC,EAAOC,EAAOC,KAClC,MAAMC,EAAgB,IAAIX,GAC1BW,EAAcH,GAAOC,GAASC,EAC9BT,EAAYU,IA4Bd,OACEC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,QAAME,SAnBYC,IACpBA,EAAEC,iBACF,MAAMC,EAAU,CAAEb,SAAQL,YAE1BmB,MAAM,gCAAiC,CACrCC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,KAEpBQ,KAAMC,IACL,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAM,gCAC7BC,MAAM,wCAEPC,MAAOC,GAAQF,MAAME,EAAIC,YAOxBrB,IAAAC,cAAA,aAAO,WACPD,IAAAC,cAAA,UAAQH,MAAOL,EAAQ6B,SAAWlB,GAAMV,EAAUU,EAAEmB,OAAOzB,QACzDE,IAAAC,cAAA,UAAQH,MAAM,UAAS,UACvBE,IAAAC,cAAA,UAAQH,MAAM,eAAc,eAC5BE,IAAAC,cAAA,UAAQH,MAAM,YAAW,YACzBE,IAAAC,cAAA,UAAQH,MAAM,WAAU,YAG1BE,IAAAC,cAAA,UAAI,YACHb,EAASoC,IAAI,CAACC,EAAG7B,IAChBI,IAAAC,cAAA,OAAKyB,IAAK9B,EAAOM,UAAU,WACzBF,IAAAC,cAAA,SACE0B,KAAK,OACLC,YAAY,OACZ9B,MAAO2B,EAAElC,KACT+B,SAAWlB,GAAMT,EAAaC,EAAO,OAAQQ,EAAEmB,OAAOzB,OACtD+B,UAAQ,IAEV7B,IAAAC,cAAA,SACE0B,KAAK,SACLC,YAAY,aACZE,IAAI,IACJhC,MAAO2B,EAAEjC,WACT8B,SAAWlB,GAAMT,EAAaC,EAAO,aAAcQ,EAAEmB,OAAOzB,OAC5D+B,UAAQ,IAEV7B,IAAAC,cAAA,UAAQ0B,KAAK,SAASI,QAASA,IAnDjBnC,KACtB,MAAMG,EAAgBX,EAAS4C,OAAO,CAACC,EAAGC,IAAMA,IAAMtC,GACtDP,EAAYU,IAiDiCoC,CAAevC,IAAQ,aAMhEI,IAAAC,cAAA,UAAQ0B,KAAK,SAASI,QA7DHK,KACvB/C,EAAY,IAAID,EAAU,CAAEG,KAAM,GAAIC,WAAY,OA4DG,qBAIjDQ,IAAAC,cAAA,UAAQ0B,KAAK,UAAS,2BCnEfU,MARf,WACE,OACErC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACd,EAAW,QCMHmD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAArC,EAAA,GAAAU,KAAA2B,EAAAC,KAAA,UAAqB5B,KAAK6B,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACoC,EAAG,QAORC","file":"static/js/main.efa07566.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction CotacaoForm() {\r\n  const [produtos, setProdutos] = useState([{ nome: \"\", quantidade: 1 }]);\r\n  const [status, setStatus] = useState(\"ABERTA\");\r\n\r\n  const handleChange = (index, field, value) => {\r\n    const novosProdutos = [...produtos];\r\n    novosProdutos[index][field] = value;\r\n    setProdutos(novosProdutos);\r\n  };\r\n\r\n  const adicionarProduto = () => {\r\n    setProdutos([...produtos, { nome: \"\", quantidade: 1 }]);\r\n  };\r\n\r\n  const removerProduto = (index) => {\r\n    const novosProdutos = produtos.filter((_, i) => i !== index);\r\n    setProdutos(novosProdutos);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const cotacao = { status, produtos };\r\n\r\n    fetch(\"http://localhost:8080/cotacao\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(cotacao),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(\"Erro ao enviar cotação\");\r\n        alert(\"Cotação enviada com sucesso!\");\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Nova Cotação</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Status:</label>\r\n        <select value={status} onChange={(e) => setStatus(e.target.value)}>\r\n          <option value=\"ABERTA\">Aberta</option>\r\n          <option value=\"PRECIFICADA\">Precificada</option>\r\n          <option value=\"APROVADA\">Aprovada</option>\r\n          <option value=\"FECHADA\">Fechada</option>\r\n        </select>\r\n\r\n        <h2>Produtos</h2>\r\n        {produtos.map((p, index) => (\r\n          <div key={index} className=\"produto\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nome\"\r\n              value={p.nome}\r\n              onChange={(e) => handleChange(index, \"nome\", e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantidade\"\r\n              min=\"1\"\r\n              value={p.quantidade}\r\n              onChange={(e) => handleChange(index, \"quantidade\", e.target.value)}\r\n              required\r\n            />\r\n            <button type=\"button\" onClick={() => removerProduto(index)}>\r\n              Remover\r\n            </button>\r\n          </div>\r\n        ))}\r\n\r\n        <button type=\"button\" onClick={adicionarProduto}>\r\n          Adicionar Produto\r\n        </button>\r\n\r\n        <button type=\"submit\">Enviar Cotação</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CotacaoForm;\r\n","import React from \"react\";\nimport CotacaoForm from \"./CotacaoForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CotacaoForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}